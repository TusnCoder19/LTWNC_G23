@model G23NHNT.Models.HomeViewModel

<div class="container">
    <h2>Danh sách bài đăng của người dùng @ViewBag.UserName</h2>

    <h3>Danh sách các nhà trọ</h3>
    <table class="table-custom">
        <thead>
            <tr>
                <th hidden>ID</th>
                <th>Bài đăng</th>
                <th>Địa chỉ</th>
                <th>Giá</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var house in Model.Houses)
            {
                <tr>
                    <td hidden>@house.IdHouse</td>
                    <td>@house.PostTitle</td>
                    <td>@house.HouseDetails.FirstOrDefault()?.Address</td>
                    <td>
                        @house.HouseDetails.FirstOrDefault()?.Price.ToString("#,0", new
                             System.Globalization.CultureInfo("vi-VN")) VND
                </td>
                <td>
                    <button class="btn btn-view-detail" onclick="viewDetail(@house.IdHouse, 'house')">
                        Xem chi
                        tiết
                    </button>
                    <button class="btn btn-warning" onclick="editItem(@house.IdHouse, 'house')">Sửa</button>
                    <button class="btn btn-danger" onclick="deleteHouse(@house.IdHouse)">Xóa</button>
                </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function viewDetail(id, type) {
            const url = `/Home/Detail?id=${id}&type=${type}`;
            fetch(url, { method: 'GET' })
                .then(response => {
                    if (response.ok) {
                        window.location.href = url;
                    } else {
                        alert('Không thể tải chi tiết. Vui lòng thử lại.');
                    }
                })
                .catch(() => alert('Đã xảy ra lỗi khi xử lý yêu cầu.'));
        }
        function editItem(id, type) {
            const url = `/QuanLi/EditHouse?id=${id}` ;
                        window.location.href = url;

        }

        // Hàm gửi yêu cầu "Xóa" và chuyển hướng
        async function deleteHouse(id) {
            const confirmDelete = confirm('Bạn có chắc chắn muốn xóa nhà trọ này?');
            if (!confirmDelete) return;

            try {
                const response = await fetch(`/QuanLi/DeleteHouse?id=${id}`, { method: 'DELETE' });
                const result = await response.json();

                if (result.success) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert('Không thể xóa: ' + result.message);
                }
            } catch (error) {
                alert('Đã xảy ra lỗi khi xóa nhà trọ.');
            }
        }

        async function deleteRoom(id) {
            const confirmDelete = confirm('Bạn có chắc chắn muốn xóa phòng trọ này?');
            if (!confirmDelete) return;

            try {
                const response = await fetch(`/QuanLi/DeleteRoom?id=${id}`, { method: 'DELETE' });
                const result = await response.json();

                if (result.success) {
                    alert(result.message);
                    // Tải lại trang sau khi xóa
                    location.reload();
                } else {
                    alert('Không thể xóa: ' + result.message);
                }
            } catch (error) {
                alert('Đã xảy ra lỗi khi xóa phòng trọ.');
            }
        }
    </script>
}
<style>
    h2,
    h3 {
        font-family: Arial, sans-serif;
        color: #333;
        margin-top: 20px;
        margin-bottom: 20px;
        font-weight: bold;
        text-align: center;
    }

    .table-custom {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 30px;
    }

    .table-custom th,
    .table-custom td {
        padding: 15px;
        text-align: left;
    }

    .table-custom thead {
        background-color: #f2f2f2;
        font-weight: bold;
        color: #555;
        border-bottom: 2px solid #ddd;
    }

    .table-custom tbody tr {
        border-bottom: 1px solid #ddd;
        transition: background-color 0.3s;
    }

    .table-custom tbody tr:hover {
        background-color: #f9f9f9;
    }

    .table-custom th,
    .table-custom td {
        border-right: 1px solid #ddd;
    }

    .table-custom th:last-child,
    .table-custom td:last-child {
        border-right: none;
    }

    .btn {
        padding: 8px 12px;
        border-radius: 4px;
        text-decoration: none;
        color: white;
        margin-right: 5px;
        transition: background-color 0.3s;
    }

    .btn-view-detail {
        background-color: #4CAF50;
    }

    .btn-warning {
        background-color: #FFA500;
    }

    .btn-danger {
        background-color: #e74c3c;
    }

    .btn:hover {
        opacity: 0.9;
    }

    .btn-view-detail:hover {
        background-color: #45a049;
    }

    /* Định dạng khác cho phần container */
    .container {
        width: 90%;
        margin: auto;
        font-family: Arial, sans-serif;
    }
</style>